/*********************************************************************
	SYSTEM cipsystem
	IMPLEMENTATION DoorControlSystemImplHost
	Header File for CIP SHELL sDoorControlUnit
	Filename: sDoorControlUnit.h
	generated by CIP Tool(R)
	
	activated code options:
		C code
			naming option: channel name prefix
		enable PENDING_ information
		incremental build
		'unsigned char' for delays
*********************************************************************/

#if !defined(_sDoorControlUnit_h_)
	#define _sDoorControlUnit_h_
/* Code Option Constants */

#if defined(_EINPUT__)
	#undef _EINPUT__
#endif 

#if !defined(_PENDING__)
	#define _PENDING__
#endif 

/* Channel Enumerations */

#if !defined(_eCHAN__)
	#define _eCHAN__

	enum eCHAN_
		{C_button1InChannel = 103, C_button2InChannel = 3, C_doorInChannel = 104, 
		 C_driveOutChannel = 105, C_light1OutChannel = 4, C_light2OutChannel = 5, 
		 C_lightBarrierInChannel = 106, C_lightBarrierOutChannel = 107};

#endif // _eCHAN__

/*********************************************************************
	CODE  GENERATION  FEATURE
	This global message enumeration can be used 
	for implementation purposes.
*********************************************************************/

enum eMSG_DoorControlUnit
	{F_button2InChannel_press_ = 1, F_button2InChannel_release_ = 2, 
	 F_button1InChannel_press_ = 3, F_button1InChannel_release_ = 4, 
	 F_doorInChannel_doorOpened_ = 5, F_doorInChannel_doorClosed_ = 6, 
	 F_doorInChannel_doorNotClosed_ = 7, F_doorInChannel_doorNotOpened_ = 8, 
	 F_lightBarrierInChannel_interrupted_ = 9, 
	 F_lightBarrierInChannel_cleared_ = 10, F_light1OutChannel_on_ = 11, 
	 F_light1OutChannel_off_ = 12, F_light2OutChannel_off_ = 13, 
	 F_light2OutChannel_on_ = 14, F_driveOutChannel_open_ = 15, 
	 F_driveOutChannel_close_ = 16, F_driveOutChannel_stop_ = 17, 
	 F_lightBarrierOutChannel_on_ = 18, F_lightBarrierOutChannel_off_ = 19};

/********************************************************************/

#if !defined(_eMSG_button2InChannel_)
	#define _eMSG_button2InChannel_

	enum eMSG_button2InChannel
		{button2InChannel_press = 1, button2InChannel_release = 2};

#endif // _eMSG_button2InChannel_

#if !defined(_eMSG_light1OutChannel_)
	#define _eMSG_light1OutChannel_

	enum eMSG_light1OutChannel
		{light1OutChannel_on = 1, light1OutChannel_off = 2};

#endif // _eMSG_light1OutChannel_

#if !defined(_eMSG_light2OutChannel_)
	#define _eMSG_light2OutChannel_

	enum eMSG_light2OutChannel
		{light2OutChannel_off = 1, light2OutChannel_on = 2};

#endif // _eMSG_light2OutChannel_

#if !defined(_eMSG_button1InChannel_)
	#define _eMSG_button1InChannel_

	enum eMSG_button1InChannel
		{button1InChannel_press = 1, button1InChannel_release = 2};

#endif // _eMSG_button1InChannel_

#if !defined(_eMSG_doorInChannel_)
	#define _eMSG_doorInChannel_

	enum eMSG_doorInChannel
		{doorInChannel_doorOpened = 1, doorInChannel_doorClosed = 2, 
		 doorInChannel_doorNotClosed = 3, doorInChannel_doorNotOpened = 4};

#endif // _eMSG_doorInChannel_

#if !defined(_eMSG_driveOutChannel_)
	#define _eMSG_driveOutChannel_

	enum eMSG_driveOutChannel
		{driveOutChannel_open = 1, driveOutChannel_close = 2, 
		 driveOutChannel_stop = 3};

#endif // _eMSG_driveOutChannel_

#if !defined(_eMSG_lightBarrierInChannel_)
	#define _eMSG_lightBarrierInChannel_

	enum eMSG_lightBarrierInChannel
		{lightBarrierInChannel_interrupted = 1, lightBarrierInChannel_cleared = 2};

#endif // _eMSG_lightBarrierInChannel_

#if !defined(_eMSG_lightBarrierOutChannel_)
	#define _eMSG_lightBarrierOutChannel_

	enum eMSG_lightBarrierOutChannel
		{lightBarrierOutChannel_on = 1, lightBarrierOutChannel_off = 2};

#endif // _eMSG_lightBarrierOutChannel_

/* Input Interface Type */

void IN_button1InChannel_press (void);
void IN_button1InChannel_release (void);
void IN_button2InChannel_press (void);
void IN_button2InChannel_release (void);
void IN_doorInChannel_doorOpened (void);
void IN_doorInChannel_doorClosed (void);
void IN_doorInChannel_doorNotClosed (void);
void IN_doorInChannel_doorNotOpened (void);
void IN_lightBarrierInChannel_interrupted (void);
void IN_lightBarrierInChannel_cleared (void);


/* Output Interface Type */

void OUT_driveOutChannel_open (void);
void OUT_driveOutChannel_close (void);
void OUT_driveOutChannel_stop (void);
void OUT_light1OutChannel_on (void);
void OUT_light1OutChannel_off (void);
void OUT_light2OutChannel_off (void);
void OUT_light2OutChannel_on (void);
void OUT_lightBarrierOutChannel_on (void);
void OUT_lightBarrierOutChannel_off (void);

/* Trigger Interface Type */

#if !defined(_tPENDING__)
	#define _tPENDING__
	
	struct tPENDING_
	{
		int ANY_;	/* boolean indicating any pending transitions */
		int CHAIN_;	/* boolean indicating pending CHAIN_ */
		int TIMEUP_;	/* boolean indicating pending TIMEUP_ */
		int READ_;	/* boolean indicating buffered internal message */
		int AUTO_;	/* boolean indicating reading AUTO_ */
	};
	
#endif // _tPENDING__

/* Generated Trigger Functions */

void TRG_TICK_(void);    /* increment CIP MACHINE time */
void TRG_STEP_(void);    /* trigger CIP MACHINE transition */
void TRG_CHAIN_(void);   /*  trigger pending chain CIP MACHINE transition */
void TRG_TIMEUP_(void);  /* trigger pending timeup CIP MACHINE transition */
void TRG_READ_(void);    /* trigger CIP MACHINE to read from internal message buffer */
void TRG_AUTO_(void);    /* trigger pending auto CIP MACHINE transition */

extern struct tPENDING_ TRG_PENDING_;    /* Pending Interface Variable defined in sDoorControlUnit.c */


/* Unit Initialization Function, defined in mDoorControlUnit.c
	called by User to initialize CIP Machine
		returning 1 if successful
		returning 0 if failed */

int fINIT_(void);

/* User defined Initialization Function for CIP Shell Interface Initialization 
	called by Unit Initialization Function */


#endif // _sDoorControlUnit_h_

/*********************************************************************
	End of CIP UNIT Header File for CIP SHELL sDoorControlUnit
*********************************************************************/
/* Actifsource ID=[b7934a9b-259a-11e1-ae2f-a14f3e396de6,79056c7a-4728-11e4-aefa-c3efe9fa99c0,cca6c98c-462e-11e4-8d10-617b527355dd,5bf79245-4729-11e4-aefa-c3efe9fa99c0,790879be-4728-11e4-aefa-c3efe9fa99c0,79091603-4728-11e4-aefa-c3efe9fa99c0,z5hO4EcvcXJqHRfsz4t3SotL/3k=] */
